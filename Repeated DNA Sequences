All DNA is composed of a series of nucleotides abbreviated as 'A', 'C', 'G', and 'T', for example: "ACGAATTCCG". When studying DNA, it is sometimes useful to identify repeated sequences within the DNA.

Write a function to find all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule.

 

Example 1:

Input: s = "AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT"
Output: ["AAAAACCCCC","CCCCCAAAAA"]
Example 2:

Input: s = "AAAAAAAAAAAAA"
Output: ["AAAAAAAAAA"]
 

Constraints:

0 <= s.length <= 105
s[i] is 'A', 'C', 'G', or 'T'.

//cpp my solution

class Solution {
public:
    vector<string> findRepeatedDnaSequences(string s) {
        vector<string> ans;
        int len = s.length();
        
        if(len<10)
            return ans;
        
        unordered_map<string,int> mp;
        
        string make = s.substr(0,10);
        
        mp[make] = 1;
        
        for(int i=10;i<len;i++){
            make+= string(1,s[i]);
            // make.erase(make.begin());
            make = make.substr(1,10);
            ++mp[make];
        }
        
        for(auto v:mp){
            if(v.second>1)
                ans.push_back(v.first);
        }
        
        return ans;
    }
};
